from mpl_toolkits.mplot3d import Axes3D
import math
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.tri as mtri

"""
Plots 3D displacement maps of the data used for and the model generated by the
InSAR Inverse project
"""

#files = ['interferogram_1.txt', 'interferogram_1_model_data.txt','interferogram_1_residual.txt']
files = ['total_displacement_binned_converted.txt', 'total_displacement_binned_converted_model_data.txt','total_displacement_binned_converted_residuals.txt']
#files = ['total_displacement_binned_50x50_converted.txt', 'total_displacement_binned_50x50_converted_model_data.txt','total_displacement_binned_50x50_converted_residuals.txt']
#files = ['testing.txt', 'testing_model_data.txt','testing_residuals.txt']
names = ['Data', 'Model','Residuals']
i = 0

# source = np.genfromtxt('converted_data.txt', dtype = 'float', delimiter='\t')
# data = np.asarray(source[:,2])
# minimum = np.amin(data)
# maximum = np.amax(data)

for filename in files:

    fig, ax = plt.subplots(1,1, facecolor='w', edgecolor='k', sharex=True, sharey=True, subplot_kw=dict(projection='3d'))

    sources = np.genfromtxt(filename, dtype = 'float', delimiter='\t')

    X = np.asarray(sources[:,0])
    Y = np.asarray(sources[:,1])
    Z = np.asarray(sources[:,2])
    
    Xf = X[~np.isnan(Z)]
    Yf = Y[~np.isnan(Z)]
    Zf = Z[~np.isnan(Z)]
    Xcut = [x for x,y,z in zip(Xf, Yf, Zf) if x > 40 and x < 240 and y > 70 and y < 200]
    Ycut = [y for x,y,z in zip(Xf, Yf, Zf) if x > 40 and x < 240 and y > 70 and y < 200]
    Zcut = [z for x,y,z in zip(Xf, Yf, Zf) if x > 40 and x < 240 and y > 70 and y < 200]

    # Zeros = np.zeros(len(Zf))
    # tri, args, kwargs = mtri.Triangulation.get_from_args_and_kwargs(Xf, Yf, Zeros)
    # test = ax.plot_trisurf(Xf, Yf, Zf, triangles=tri.triangles, cmap = 'magma')
    
    Zeros = np.zeros(len(Zcut))
    tri, args, kwargs = mtri.Triangulation.get_from_args_and_kwargs(Xcut, Ycut, Zeros)
    test = ax.plot_trisurf(Xcut, Ycut, Zcut, triangles=tri.triangles, cmap = 'magma')

    ax.set_title(names[i])
    ax.set_xlabel('x')
    ax.set_ylabel('y')


    #ax.set_zlim([-0.00025, 0.00025])
    ax.set_zticklabels([])
    ax.view_init(azim=-90, elev=90)
    plt.colorbar(test)

    i += 1


resfile = np.genfromtxt('total_displacement_binned_converted_residuals.txt', dtype = 'float', delimiter='\t')

resid = np.asarray(resfile[:,2])
fig, ax = plt.subplots(1,1, facecolor='w', edgecolor='k', sharex=True, sharey=True)
#ax.hist(Zf, bins=30)
ax.hist(resid, bins=30)
ax.set_xlabel('Residual (km)')
ax.set_ylabel('Counts')
plt.show()

